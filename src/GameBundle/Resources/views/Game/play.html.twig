{# src/UserBundle/Resources/views/Gamer/select_gamer.html.twig #}

{% extends "GameBundle::layout.html.twig" %}
{% set game = true %}

{% block title %}{{ parent() }} - {{ titleTab }}{% endblock %}

{% block body %}
    {% for message in app.session.flashbag.get('notice') %}
      <div class="alert alert-danger">
        <p>{{ message }}</p>
      </div>
    {% endfor %}

    {% for message in app.session.flashbag.get('success') %}
      <div class="alert alert-success">
        <p>{{ message }}</p>
      </div>
    {% endfor %}

    <h2>{{ title }}</h2>

    <div class="row">
        <div class="col-lg-3">

            <div class="messageInfo">
                <p>C'est au joueur <strong></strong> de commencer.</p>
            </div>

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary">
                Jetez les dés !
            </button>
{#
            <!-- Modal -->
            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            ...
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>#}

            <div class="dice">
                <img class="die1" src="{{ asset('bundles/GameBundle/images/un.png') }}" alt="numéro un" />
                <img class="die2" src="{{ asset('bundles/GameBundle/images/deux.png') }}" alt="numéro deux" />
                <img class="die3" src="{{ asset('bundles/GameBundle/images/trois.png') }}" alt="numéro trois" />
                <img class="die4" src="{{ asset('bundles/GameBundle/images/quatre.png') }}" alt="numéro quatre" />
                <img class="die5" src="{{ asset('bundles/GameBundle/images/cinq.png') }}" alt="numéro cinq" />
                <img class="die6" src="{{ asset('bundles/GameBundle/images/six.png') }}" alt="numéro six" />
            </div>

        </div>

        <div class="col-lg-6">
            <table class="board">
                <tr class="borderTop">
                    <td class="jaune borderLeft">22</td>
                    <td class="bleu borderBottom">21</td>
                    <td class="rouge borderBottom">20</td>
                    <td class="vert borderBottom">19</td>
                    <td class="jaune borderBottom">18</td>
                    <td class="bleu borderBottom">17</td>
                    <td class="rouge borderBottom">16</td>
                    <td class="vert borderRight">15</td>
                </tr>
                <tr>
                    <td class="vert borderRight borderLeft">23</td>
                    <td class="rouge">44</td>
                    <td class="vert borderBottom">43</td>
                    <td class="jaune borderBottom">42</td>
                    <td class="bleu borderBottom">41</td>
                    <td class="rouge borderBottom">40</td>
                    <td class="vert">39</td>
                    <td class="jaune borderLeft borderRight">14</td>
                </tr>
                <tr>
                    <td class="rouge borderRight borderLeft">24</td>
                    <td class="bleu borderRight">45</td>
                    <td class="jaune">58</td>
                    <td class="bleu borderBottom">57</td>
                    <td class="rouge borderBottom">56</td>
                    <td class="vert">55</td>
                    <td class="jaune borderLeft">38</td>
                    <td class="bleu borderLeft borderRight">13</td>
                </tr>
                <tr>
                    <td class="bleu borderRight borderLeft">25</td>
                    <td class="jaune borderRight">46</td>
                    <td class="vert borderRight">59</td>
                    <!-- case win -->
                    <td class="win"><span class="glyphicon glyphicon-flag"></span></td> 
                    <!-- case win -->                
                    <td class="vert">63</td>
                    <td class="jaune borderLeft">54</td>
                    <td class="bleu borderLeft">37</td>
                    <td class="rouge borderLeft borderRight">12</td>
                </tr>
                <tr>
                    <td class="jaune borderRight borderLeft">26</td>
                    <td class="vert borderRight">47</td>
                    <td class="rouge">60</td>
                    <td class="bleu borderTop">61</td>
                    <td class="jaune">62</td>
                    <td class="bleu borderLeft">53</td>
                    <td class="rouge borderLeft">36</td>
                    <td class="vert borderLeft borderRight">11</td>
                </tr>
                <tr>
                    <td class="vert borderRight borderLeft">27</td>
                    <td class="rouge">48</td>
                    <td class="bleu borderTop">49</td>
                    <td class="jaune borderTop">50</td>
                    <td class="vert borderTop">51</td>
                    <td class="rouge">52</td>
                    <td class="vert borderLeft">35</td>
                    <td class="jaune borderLeft borderRight">10</td>
                </tr>
                <tr>
                    <td class="rouge borderLeft">28</td>
                    <td class="bleu borderTop">29</td>
                    <td class="jaune borderTop">30</td>
                    <td class="vert borderTop">31</td>
                    <td class="rouge borderTop">32</td>
                    <td class="bleu borderTop">33</td>
                    <td class="jaune">34</td>
                    <td class="bleu borderLeft borderRight">9</td>
                </tr>
                <tr class="borderBottom">
                    <td class="bleu borderTop">1</td>
                    <td class="jaune borderTop">2</td>
                    <td class="vert borderTop">3</td>
                    <td class="rouge borderTop">4</td>
                    <td class="bleu borderTop">5</td>
                    <td class="jaune borderTop">6</td>
                    <td class="vert borderTop">7</td>
                    <td class="rouge borderRight">8</td>
                </tr>
            </table>
        </div>

        <div class="col-lg-3">
            <h3>Joueurs et statistiques</h3>
            {% for gamer in gamers %}
                <div class="stats">
                    <p><strong>{{ gamer.username }}</strong></p>
                    <p>Meilleur score : {{ gamer.bestScore }}</p>
                    <p>Nombre de parties gagnées : {{ gamer.gameWonNb }}</p>
                    <p>Nombre de bonnes réponses : {{ gamer.rightAnswerNb }}</p>
                    <p>Niveau : {{ gamer.level }}</p>
                </div>
            {% endfor %}
        </div>
    </div>
    
    <div class="row">
        <div class="col-lg-offset-3 col-lg-6 questions">
            <div class="infoQuestion">
                Difficulté : <div class="difficulty"></div>
                Matière : <div class="subject"></div>
                Thème : <div class="topic"></div>
                Niveau : <div class="schoolLevel"></div>
            </div>
            <div class="question">
            </div>
            <div class="answers">
            </div>
        </div>
    </div>

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script type="text/javascript">
    $(function () {
        var minNumber = 1;
        var maxNumber = 6;
        var dice = $('.dice');
        var cumulDiceGamer1 = 0;
        var firstTime = true;

        dice.children().hide();

        // get a random gamer
        var len = $('.stats').length;
        var rowGamer = Math.floor( Math.random() * len );
        var randomGamer = $('.stats:nth('+ rowGamer +') > p:first').text();
        $('.messageInfo strong').append(randomGamer);

        $('button').on('click', function(e) {
            e.preventDefault();
            var randomNumber = Math.floor(Math.random() * maxNumber) + minNumber;
            dice.children().hide();
            
            $('.dice .die' + randomNumber).show();
            cumulDiceGamer1 += randomNumber;
            if (cumulDiceGamer1 > 64) {
                cumulDiceGamer1 -= randomNumber;
            } 

            $('.board td').each(function() {
                $(this).removeClass('activeCase');
                if ($(this).text() == cumulDiceGamer1) {
                    $(this).addClass('activeCase');
                    $('.questions').show();

                    var url = "{{ path('get_random_question', { 'id': 0 }) }}";
                    
                    if ($(this).text() % 4 == 1) {
                        url = url.replace('0', '{{ subjects[0].id }}');
                        $.ajax({
                            url: url,
                            type: 'GET',
                            dataType: 'json',
                            success: function (response) {

                                if (!firstTime) {
                                    var classStr = $('.questions').attr('class');
                                    var lastClass = classStr.substr( classStr.lastIndexOf(' ') + 1);
                                    $('.questions').removeClass(lastClass);
                                }
                                $('.questions').addClass('blue');
                                $('.questions .question').html(response.question);
                                $('.infoQuestion .difficulty').html(response.difficulty);
                                $('.infoQuestion .topic').html(response.topic.nameTopic);
                                $('.infoQuestion .subject').html(response.topic.subject.nameSubject);
                                $('.infoQuestion .schoolLevel').html(response.schoolClass.schoolClass);
                                $('.questions .answers').html('');
                                var index = 0;
                                response.answers.forEach(function(data) {
                                    
                                    $('.questions .answers').append('<div class="answer answer'+ index +'">'+ data.answer +'</div>');
                                    
                                    index++;
                                })
                                var parent = $('.questions .answers');
                                var divsAnswer = parent.children();
                                while(divsAnswer.length) {
                                    parent.append(divsAnswer.splice(Math.floor(Math.random() * divsAnswer.length), 1));
                                }
                                firstTime = false;                                
                            },
                            error: function(response) {
                                alert('erreur1');
                            }
                        });   

                    } else if ($(this).text() % 4 == 2) {
                        url = url.replace('0', '{{ subjects[1].id }}');
                        $.ajax({
                            url: url,
                            type: 'GET',
                            dataType: 'json',
                            success: function (response) {
                                if (!firstTime) {
                                    var classStr = $('.questions').attr('class');
                                    var lastClass = classStr.substr( classStr.lastIndexOf(' ') + 1);
                                    $('.questions').removeClass(lastClass);
                                }
                                $('.questions').addClass('yellow');
                                $('.questions .question').html(response.question);
                                $('.infoQuestion .difficulty').html(response.difficulty);
                                $('.infoQuestion .topic').html(response.topic.nameTopic);
                                $('.infoQuestion .subject').html(response.topic.subject.nameSubject);
                                $('.infoQuestion .schoolLevel').html(response.schoolClass.schoolClass);
                                $('.questions .answers').html('');
                                var index = 0;
                                response.answers.forEach(function(data) {
                                    $('.questions .answers').append('<div class="answer answer'+ index +'">'+ data.answer +'</div>');
                                    index++;
                                })
                                var parent = $('.questions .answers');
                                var divsAnswer = parent.children();
                                while(divsAnswer.length) {
                                    parent.append(divsAnswer.splice(Math.floor(Math.random() * divsAnswer.length), 1));
                                }
                                firstTime = false;                                
                            },
                            error: function(response) {
                                alert('erreur2');                                
                            }
                        });
                    } else if ($(this).text() % 4 == 3) {
                        url = url.replace('0', '{{ subjects[2].id }}');
                        $.ajax({
                            url: url,
                            type: 'GET',
                            dataType: 'json',
                            success: function (response) {
                                if (!firstTime) {
                                    var classStr = $('.questions').attr('class');
                                    var lastClass = classStr.substr( classStr.lastIndexOf(' ') + 1);
                                    $('.questions').removeClass(lastClass);
                                }
                                $('.questions').addClass('green');
                                $('.questions .question').html(response.question);
                                $('.infoQuestion .difficulty').html(response.difficulty);
                                $('.infoQuestion .topic').html(response.topic.nameTopic);
                                $('.infoQuestion .subject').html(response.topic.subject.nameSubject);
                                $('.infoQuestion .schoolLevel').html(response.schoolClass.schoolClass);
                                $('.questions .answers').html('');
                                var index = 0;
                                response.answers.forEach(function(data) {
                                    $('.questions .answers').append('<div class="answer answer'+ index +'">'+ data.answer +'</div>');
                                    index++;
                                })
                                var parent = $('.questions .answers');
                                var divsAnswer = parent.children();
                                while(divsAnswer.length) {
                                    parent.append(divsAnswer.splice(Math.floor(Math.random() * divsAnswer.length), 1));
                                }
                                firstTime = false;                                
                            },
                            error: function(response) {
                                alert('erreur3');
                            }
                        });
                    } else if ($(this).text() % 4 == 0) {
                        url = url.replace('0', '{{ subjects[3].id }}');
                        $.ajax({
                            url: url,
                            type: 'GET',
                            dataType: 'json',
                            success: function (response) {
                                if (!firstTime) {
                                    var classStr = $('.questions').attr('class');
                                    var lastClass = classStr.substr( classStr.lastIndexOf(' ') + 1);
                                    $('.questions').removeClass(lastClass);
                                }
                                $('.questions').addClass('red');
                                $('.questions .question').html(response.question);
                                $('.infoQuestion .difficulty').html(response.difficulty);
                                $('.infoQuestion .topic').html(response.topic.nameTopic);
                                $('.infoQuestion .subject').html(response.topic.subject.nameSubject);
                                $('.infoQuestion .schoolLevel').html(response.schoolClass.schoolClass);
                                $('.questions .answers').html('');
                                var index = 0;
                                response.answers.forEach(function(data) {
                                    $('.questions .answers').append('<div class="answer answer'+ index +'">'+ data.answer +'</div>');
                                    index++;
                                })
                                var parent = $('.questions .answers');
                                var divsAnswer = parent.children();
                                while(divsAnswer.length) {
                                    parent.append(divsAnswer.splice(Math.floor(Math.random() * divsAnswer.length), 1));
                                }
                                firstTime = false;
                            },
                            error: function(response) {
                                alert('erreur4');
                            }
                        });
                    }
                }
            })
        
            // end of game
            if (cumulDiceGamer1 == 64) {
                $('.board .win').addClass('activeCase');
                alert('gagné !');
                return false;                    
            }
            
        })
    });
    </script>

{% endblock %}